////////////////////////////////////////////////////////////////////////////////
// 版权:     利尔达科技集团股份有限公司
// 文件名:   
// 版本：    v1.0
// 工作环境: IAR  v5.30
// 作者:     佟亚波、于海波
// 生成日期: 2013.12
// 功能:     API
// 相关文件: 
// 修改日志：
////////////////////////////////////////////////////////////////////////////////

#ifndef __SX1276_H__
#define __SX1276_H__


#include "SX1276_LoRa.h"
#include "SX1276_Hal.h"



//===================================定义===================================================
typedef enum
{
    Init_LoRa_0_8K,      
    Init_LoRa_4_8K,
    Init_LoRa_10k,
}tSX127xInitPara;      //定义速率枚举

typedef enum
{
    NORMAL,                //正常      
    PARAMETER_INVALID,    //参数不可用
    SPI_READCHECK_WRONG,  //SPI出错
}tSX127xError;           //定义出错枚举

typedef enum
{
    SLEEP,
    STANDBY,
    TX_ONGOING,
    RX_ONGOING,
}tSX127xState;    //定义RF物理状态，用户可以不使用

typedef enum
{
    HOLDON,
    TX,
    LISTENING,  
}tRadio_Machine;   //定义逻辑状态，用户可以不使用

typedef enum
{
    MASTER,
    SLAVE,
}tMasterSlave;   //定义主从枚举 ，测试时用

typedef struct
{
    tMasterSlave   MasterSlave;  //主从
    tSX127xState   SX127xState;  //物理状态
    tRadio_Machine Machine;      //逻辑状态
}stRadio_Situation;          //定义状态结构体

//extern stRadio_Situation SX127xSituation;
//===================================函数声明===================================================
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF初始化
// 输入参数 : tSX127xInitPara initPara  输入速率Init_LoRa_0_8K, Init_LoRa_4_8K , Init_LoRa_10k,
// 返回参数 : tSX127xError              错误枚举内容
// 说明     : 初始化时，信道初始化默认为0信道
////////////////////////////////////////////////////////////////////////////////
tSX127xError SX127x_init(tSX127xInitPara initPara);
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF发送数据包
// 输入参数 : uint8_t*data：发送数据指针，uint8_t size发送数据长度
// 返回参数 : 无
// 说明     : 
////////////////////////////////////////////////////////////////////////////////
void SX1276_TxPacket(uint8_t*data,uint8_t size);
//void SX1276_Process();
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF进入接收状态
// 输入参数 : uint8_t clen 可变数据包下此值无效，固定数据包为长度值
// 返回参数 : 无
// 说明     : 
////////////////////////////////////////////////////////////////////////////////
void Rx_mode(uint8_t clen);
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF接收可变数据包
// 输入参数 : uint8_t*cbuf接收数组指针,uint8_t *csize返回长度指针
// 返回参数 : 无
// 说明     : 
////////////////////////////////////////////////////////////////////////////////
void RF_RxVariPacket(uint8_t*cbuf,uint8_t *csize);
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF接收固定数据包
// 输入参数 : uint8_t*cbuf接收数组指针,uint8_t csize接收固定长度
// 返回参数 : 无
// 说明     : 在速率10k时只能采用固定数据包长度
////////////////////////////////////////////////////////////////////////////////
void RF_RxFixiPacket(uint8_t*cbuf,uint8_t csize);
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF进入SLEEP状态
// 输入参数 : 无
// 返回参数 : 无
// 说明     : 
////////////////////////////////////////////////////////////////////////////////
void LSD_RF_SleepMode(void);
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF进入standby状态
// 输入参数 : 无
// 返回参数 : 无
// 说明     : 
////////////////////////////////////////////////////////////////////////////////
void LSD_RF_StandbyMode(void);
////////////////////////////////////////////////////////////////////////////////
// 功能描述 : RF进入不同信道
// 输入参数 : uint8_t ch  范围0-40
// 返回参数 : 无
// 说明     : 
////////////////////////////////////////////////////////////////////////////////
uint8_t RF_FreqSet(uint8_t ch);
//*****************************************************************************************
#endif
